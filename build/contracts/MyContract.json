{
  "contractName": "MyContract",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "breeder",
          "type": "address"
        }
      ],
      "name": "addBreeder",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedBreeder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "breeder",
          "type": "address"
        }
      ],
      "name": "registerBreeder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "breeder",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "animalID",
          "type": "uint256"
        }
      ],
      "name": "AnimalInformation",
      "outputs": [
        {
          "internalType": "string",
          "name": "race",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "ville",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "color",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "race",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "ville",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "color",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "declareAnimal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"breeder\",\"type\":\"address\"}],\"name\":\"addBreeder\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"animalID\",\"type\":\"uint256\"}],\"name\":\"AnimalInformation\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"race\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ville\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"color\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedBreeder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"race\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ville\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"color\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"declareAnimal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"breeder\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"breeder\",\"type\":\"address\"}],\"name\":\"registerBreeder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.      * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/D/ESILV S08/Blockchain programming/TD07/contracts/MyContract.sol\":\"MyContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/ESILV S08/Blockchain programming/TD07/contracts/Address.sol\":{\"keccak256\":\"0xe8026db6cd6f06e5663d7ff54dff3451bde86244c6f10ec7575017d4553f26c0\",\"urls\":[\"bzz-raw://ddd97e7052721cb92996648302a3c0c09b5600625f8e438223a2526119cc099e\",\"dweb:/ipfs/Qmc4qDdckvhj5jpmyWSTRB6RXqTtttbeXY86FxZR8K3WYK\"]},\"/D/ESILV S08/Blockchain programming/TD07/contracts/Context.sol\":{\"keccak256\":\"0x8f81a6c6574d11165562ba3ae29c01cf234ab2f8591795c6f887fa99e9dedaa5\",\"urls\":[\"bzz-raw://a4c70d1d09391b76f53c7b51f1efbd0d91b6c7ab6041fbef4048b761cb74a7d6\",\"dweb:/ipfs/Qmb9iR8pVZYydoZEiHQ9wDAqtwmyJTmrczbu7CRCTixX3e\"]},\"/D/ESILV S08/Blockchain programming/TD07/contracts/Counters.sol\":{\"keccak256\":\"0x3e7dd1d35208040789cea8dbe193b13a02a1e90227d656db0a5dd640ef790c54\",\"urls\":[\"bzz-raw://d423f04a4a70dd32defabc574fdb4620f19109207bb04b7a1b7f15e086a541cb\",\"dweb:/ipfs/QmaSyiuLMycFKb19K4KSfv4jZyf3jGKuCymb1qZX1ZN1gY\"]},\"/D/ESILV S08/Blockchain programming/TD07/contracts/ERC165.sol\":{\"keccak256\":\"0xe74f965ce77f5e3603fe36d1cc3096fedd007ef50575d5488e7a5d459cafc1b3\",\"urls\":[\"bzz-raw://a8ebe07c2d01e8932d2daa210ac5bf20e18301c64380a05aa595692a7977ae38\",\"dweb:/ipfs/QmZrh6eDNw5fpvUZbSsGoDfe9KczoWFKKNWQjSfsFpdiFU\"]},\"/D/ESILV S08/Blockchain programming/TD07/contracts/ERC721.sol\":{\"keccak256\":\"0x66a7b2d629fba326808a13a86bcb08ace472a1128e27303f8bc82c7c865a9521\",\"urls\":[\"bzz-raw://5dbd27df3a14c25af99b447076a8dadcce8b195166e9cd0213cf6549488c8c01\",\"dweb:/ipfs/QmYmV2LJC6QRDfPdTNVYrS5FvaDHe1MEqnGraKbQ4oJbgb\"]},\"/D/ESILV S08/Blockchain programming/TD07/contracts/IERC165.sol\":{\"keccak256\":\"0x8105a61f76c22bed2084132f8fc7f6fe5bfd62a3b94a1eb8db03592267ed2801\",\"urls\":[\"bzz-raw://7fa4a19848327ec0173cac1bccfa2197d84b39f09a0e81fdf2c9a232b572c6c8\",\"dweb:/ipfs/QmP8t8e5mfrh58pFvfVYKhLp1SHQCaf1VR2Yugo863ozMy\"]},\"/D/ESILV S08/Blockchain programming/TD07/contracts/IERC721.sol\":{\"keccak256\":\"0xf6194463e3692babe4a3e8ecec4bd721c57c978fdff450774bf1351ad54ecb09\",\"urls\":[\"bzz-raw://13680b41700bc77e5483145df7c68c66aa87d506c9a6f36c9e1d2f67998e1230\",\"dweb:/ipfs/QmcUjdNH1edYwrX8xNqfopcUAvJAasB1Mh3LHn6ykCJMXk\"]},\"/D/ESILV S08/Blockchain programming/TD07/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0xa174db0bd4c3d7b7db25a63111ee6ad644cdb46b5ff04c42f649bed0d9f12678\",\"urls\":[\"bzz-raw://cacf13afcb10f8050772257874178d7c0313c6cb6ffc2e345dc810a6d1c78a12\",\"dweb:/ipfs/QmSitJYR9MZpCkVbg1s2hweu4FhJZZxbJQmYX8J4fSc3rW\"]},\"/D/ESILV S08/Blockchain programming/TD07/contracts/MyContract.sol\":{\"keccak256\":\"0x349ca22ede485250e3290be8d230303b23656d8ab4942b5df2a09eb56e57daed\",\"urls\":[\"bzz-raw://d3f11b3c3ddd3cc6bca52091bf1612b5857d0fe639e3a44cb51deac99689422b\",\"dweb:/ipfs/QmUnkiXWWUkxAVtvNCdhnGgRPUDjbT94p3gEKsr5tZzEvE\"]},\"/D/ESILV S08/Blockchain programming/TD07/contracts/SafeMath.sol\":{\"keccak256\":\"0x063c0b254c81d18ead109db5fda398e35f6847a906f8fafdf13e53333dfd7ca4\",\"urls\":[\"bzz-raw://c6f60c39290732572804eaa098d33840fdc2bafc59c20e9c40af7a7252f71093\",\"dweb:/ipfs/QmSwdBSm7kJWxKoC791ua6BSaRRdck9WCmDuhGv1JYNydG\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200002a6301ffc9a760e01b6200008960201b60201c565b620000426380ac58cd60e01b6200008960201b60201c565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000192565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000126576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6127cd80620001a26000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063476fd47411610097578063a63b6d3a11610066578063a63b6d3a146108cd578063b88d4fde14610929578063c3c5a54714610a2e578063e985e9c514610a8a576100f5565b8063476fd474146107735780636352211e146107b757806370a0823114610825578063a22cb4651461087d576100f5565b80630e72a687116100d35780630e72a6871461021b57806323b872dd1461040d5780632e2e686d1461047b57806342842e0e14610705576100f5565b806301ffc9a7146100fa578063081812fc1461015f578063095ea7b3146101cd575b600080fd5b6101456004803603602081101561011057600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b06565b604051808215151515815260200191505060405180910390f35b61018b6004803603602081101561017557600080fd5b8101908080359060200190929190505050610b6d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610219600480360360408110156101e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c08565b005b6102476004803603602081101561023157600080fd5b8101908080359060200190929190505050610d4c565b604051808060200186815260200180602001806020018060200185810385528a818151815260200191508051906020019080838360005b8381101561029957808201518184015260208101905061027e565b50505050905090810190601f1680156102c65780820380516001836020036101000a031916815260200191505b50858103845288818151815260200191508051906020019080838360005b838110156102ff5780820151818401526020810190506102e4565b50505050905090810190601f16801561032c5780820380516001836020036101000a031916815260200191505b50858103835287818151815260200191508051906020019080838360005b8381101561036557808201518184015260208101905061034a565b50505050905090810190601f1680156103925780820380516001836020036101000a031916815260200191505b50858103825286818151815260200191508051906020019080838360005b838110156103cb5780820151818401526020810190506103b0565b50505050905090810190601f1680156103f85780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b6104796004803603606081101561042357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061106f565b005b610703600480360360a081101561049157600080fd5b81019080803590602001906401000000008111156104ae57600080fd5b8201836020820111156104c057600080fd5b803590602001918460018302840111640100000000831117156104e257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019064010000000081111561054f57600080fd5b82018360208201111561056157600080fd5b8035906020019184600183028401116401000000008311171561058357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156105e657600080fd5b8201836020820111156105f857600080fd5b8035906020019184600183028401116401000000008311171561061a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561067d57600080fd5b82018360208201111561068f57600080fd5b803590602001918460018302840111640100000000831117156106b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506110e5565b005b6107716004803603606081101561071b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611235565b005b6107b56004803603602081101561078957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611255565b005b6107e3600480360360208110156107cd57600080fd5b810190808035906020019092919050505061141c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108676004803603602081101561083b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114e4565b6040518082815260200191505060405180910390f35b6108cb6004803603604081101561089357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506115b9565b005b61090f600480360360208110156108e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611771565b604051808215151515815260200191505060405180910390f35b610a2c6004803603608081101561093f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156109a657600080fd5b8201836020820111156109b857600080fd5b803590602001918460018302840111640100000000831117156109da57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611791565b005b610a7060048036036020811015610a4457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611809565b604051808215151515815260200191505060405180910390f35b610aec60048036036040811015610aa057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061185f565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000610b78826118f3565b610bcd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806126d0602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610c138261141c565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c9a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806127256021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610cb9611965565b73ffffffffffffffffffffffffffffffffffffffff161480610ce85750610ce781610ce2611965565b61185f565b5b610d3d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806126456038913960400191505060405180910390fd5b610d47838361196d565b505050565b60606000606080606060078681548110610d6257fe5b906000526020600020906005020160000160078781548110610d8057fe5b90600052602060002090600502016001015460078881548110610d9f57fe5b906000526020600020906005020160020160078981548110610dbd57fe5b906000526020600020906005020160030160078a81548110610ddb57fe5b9060005260206000209060050201600401848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e815780601f10610e5657610100808354040283529160200191610e81565b820191906000526020600020905b815481529060010190602001808311610e6457829003601f168201915b50505050509450828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f1d5780601f10610ef257610100808354040283529160200191610f1d565b820191906000526020600020905b815481529060010190602001808311610f0057829003601f168201915b50505050509250818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fb95780601f10610f8e57610100808354040283529160200191610fb9565b820191906000526020600020905b815481529060010190602001808311610f9c57829003601f168201915b50505050509150808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110555780601f1061102a57610100808354040283529160200191611055565b820191906000526020600020905b81548152906001019060200180831161103857829003601f168201915b505050505090509450945094509450945091939590929450565b61108061107a611965565b82611a26565b6110d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806127466031913960400191505060405180910390fd5b6110e0838383611b1a565b505050565b600115156110f233611809565b15151461114a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061259b6028913960400191505060405180910390fd5b60076040518060a0016040528087815260200186815260200185815260200184815260200183815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000190805190602001906111b89291906124f5565b506020820151816001015560408201518160020190805190602001906111df9291906124f5565b5060608201518160030190805190602001906111fc9291906124f5565b5060808201518160040190805190602001906112199291906124f5565b50505061122e33600160078054905003611d82565b5050505050565b61125083838360405180602001604052806000815250611791565b505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806127776021913960400191505060405180910390fd5b6008819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f07c4bdeb5db0bd14ff301a05f4d029a128399c773e8bd694ace128502b09db0081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806126a76029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561156b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061267d602a913960400191505060405180910390fd5b6115b2600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611fa6565b9050919050565b6115c1611965565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611662576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b806004600061166f611965565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661171c611965565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60066020528060005260406000206000915054906101000a900460ff1681565b6117a261179c611965565b83611a26565b6117f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806127466031913960400191505060405180910390fd5b61180384848484611fb4565b50505050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166119e08361141c565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611a31826118f3565b611a86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612619602c913960400191505060405180910390fd5b6000611a918361141c565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611b0057508373ffffffffffffffffffffffffffffffffffffffff16611ae884610b6d565b73ffffffffffffffffffffffffffffffffffffffff16145b80611b115750611b10818561185f565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611b3a8261141c565b73ffffffffffffffffffffffffffffffffffffffff1614611ba6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806126fc6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806125f56024913960400191505060405180910390fd5b611c37838383612026565b611c4260008261196d565b611c89600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061202b565b611cd0600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061204e565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b611e2e816118f3565b15611ea1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b611ead60008383612026565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611f46600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061204e565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600081600001549050919050565b611fbf848484611b1a565b611fcb84848484612064565b612020576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806125c36032913960400191505060405180910390fd5b50505050565b505050565b612043600182600001546123a090919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b60006120858473ffffffffffffffffffffffffffffffffffffffff166123ea565b6120925760019050612398565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b6120d6611965565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561218657808201518184015260208101905061216b565b50505050905090810190601f1680156121b35780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061224b5780518252602082019150602081019050602083039250612228565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146122ad576040519150601f19603f3d011682016040523d82523d6000602084013e6122b2565b606091505b509150915081612320576000815111156122cf5780518082602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806125c36032913960400191505060405180910390fd5b600081806020019051602081101561233757600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b60006123e283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612435565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561242c57506000801b8214155b92505050919050565b60008383111582906124e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156124a757808201518184015260208101905061248c565b50505050905090810190601f1680156124d45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061253657805160ff1916838001178555612564565b82800160010185558215612564579182015b82811115612563578251825591602001919060010190612548565b5b5090506125719190612575565b5090565b61259791905b8082111561259357600081600090555060010161257b565b5090565b9056fe596f752772206e6f7420616c6c6f77656420746f206465636c61726520796f757220616e696d616c4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644d75737420626520746865206f776e6572206f662074686520636f6e7472616374a26469706673582212207bee574e18a20e318327611aeef54e7759015db2fee1e7c7b809b64c67591a7a64736f6c63430006000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063476fd47411610097578063a63b6d3a11610066578063a63b6d3a146108cd578063b88d4fde14610929578063c3c5a54714610a2e578063e985e9c514610a8a576100f5565b8063476fd474146107735780636352211e146107b757806370a0823114610825578063a22cb4651461087d576100f5565b80630e72a687116100d35780630e72a6871461021b57806323b872dd1461040d5780632e2e686d1461047b57806342842e0e14610705576100f5565b806301ffc9a7146100fa578063081812fc1461015f578063095ea7b3146101cd575b600080fd5b6101456004803603602081101561011057600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b06565b604051808215151515815260200191505060405180910390f35b61018b6004803603602081101561017557600080fd5b8101908080359060200190929190505050610b6d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610219600480360360408110156101e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c08565b005b6102476004803603602081101561023157600080fd5b8101908080359060200190929190505050610d4c565b604051808060200186815260200180602001806020018060200185810385528a818151815260200191508051906020019080838360005b8381101561029957808201518184015260208101905061027e565b50505050905090810190601f1680156102c65780820380516001836020036101000a031916815260200191505b50858103845288818151815260200191508051906020019080838360005b838110156102ff5780820151818401526020810190506102e4565b50505050905090810190601f16801561032c5780820380516001836020036101000a031916815260200191505b50858103835287818151815260200191508051906020019080838360005b8381101561036557808201518184015260208101905061034a565b50505050905090810190601f1680156103925780820380516001836020036101000a031916815260200191505b50858103825286818151815260200191508051906020019080838360005b838110156103cb5780820151818401526020810190506103b0565b50505050905090810190601f1680156103f85780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b6104796004803603606081101561042357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061106f565b005b610703600480360360a081101561049157600080fd5b81019080803590602001906401000000008111156104ae57600080fd5b8201836020820111156104c057600080fd5b803590602001918460018302840111640100000000831117156104e257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019064010000000081111561054f57600080fd5b82018360208201111561056157600080fd5b8035906020019184600183028401116401000000008311171561058357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156105e657600080fd5b8201836020820111156105f857600080fd5b8035906020019184600183028401116401000000008311171561061a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561067d57600080fd5b82018360208201111561068f57600080fd5b803590602001918460018302840111640100000000831117156106b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506110e5565b005b6107716004803603606081101561071b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611235565b005b6107b56004803603602081101561078957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611255565b005b6107e3600480360360208110156107cd57600080fd5b810190808035906020019092919050505061141c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108676004803603602081101561083b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114e4565b6040518082815260200191505060405180910390f35b6108cb6004803603604081101561089357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506115b9565b005b61090f600480360360208110156108e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611771565b604051808215151515815260200191505060405180910390f35b610a2c6004803603608081101561093f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156109a657600080fd5b8201836020820111156109b857600080fd5b803590602001918460018302840111640100000000831117156109da57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611791565b005b610a7060048036036020811015610a4457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611809565b604051808215151515815260200191505060405180910390f35b610aec60048036036040811015610aa057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061185f565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000610b78826118f3565b610bcd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806126d0602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610c138261141c565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c9a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806127256021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610cb9611965565b73ffffffffffffffffffffffffffffffffffffffff161480610ce85750610ce781610ce2611965565b61185f565b5b610d3d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806126456038913960400191505060405180910390fd5b610d47838361196d565b505050565b60606000606080606060078681548110610d6257fe5b906000526020600020906005020160000160078781548110610d8057fe5b90600052602060002090600502016001015460078881548110610d9f57fe5b906000526020600020906005020160020160078981548110610dbd57fe5b906000526020600020906005020160030160078a81548110610ddb57fe5b9060005260206000209060050201600401848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e815780601f10610e5657610100808354040283529160200191610e81565b820191906000526020600020905b815481529060010190602001808311610e6457829003601f168201915b50505050509450828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f1d5780601f10610ef257610100808354040283529160200191610f1d565b820191906000526020600020905b815481529060010190602001808311610f0057829003601f168201915b50505050509250818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fb95780601f10610f8e57610100808354040283529160200191610fb9565b820191906000526020600020905b815481529060010190602001808311610f9c57829003601f168201915b50505050509150808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110555780601f1061102a57610100808354040283529160200191611055565b820191906000526020600020905b81548152906001019060200180831161103857829003601f168201915b505050505090509450945094509450945091939590929450565b61108061107a611965565b82611a26565b6110d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806127466031913960400191505060405180910390fd5b6110e0838383611b1a565b505050565b600115156110f233611809565b15151461114a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061259b6028913960400191505060405180910390fd5b60076040518060a0016040528087815260200186815260200185815260200184815260200183815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000190805190602001906111b89291906124f5565b506020820151816001015560408201518160020190805190602001906111df9291906124f5565b5060608201518160030190805190602001906111fc9291906124f5565b5060808201518160040190805190602001906112199291906124f5565b50505061122e33600160078054905003611d82565b5050505050565b61125083838360405180602001604052806000815250611791565b505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806127776021913960400191505060405180910390fd5b6008819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f07c4bdeb5db0bd14ff301a05f4d029a128399c773e8bd694ace128502b09db0081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806126a76029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561156b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061267d602a913960400191505060405180910390fd5b6115b2600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611fa6565b9050919050565b6115c1611965565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611662576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b806004600061166f611965565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661171c611965565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60066020528060005260406000206000915054906101000a900460ff1681565b6117a261179c611965565b83611a26565b6117f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806127466031913960400191505060405180910390fd5b61180384848484611fb4565b50505050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166119e08361141c565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611a31826118f3565b611a86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612619602c913960400191505060405180910390fd5b6000611a918361141c565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611b0057508373ffffffffffffffffffffffffffffffffffffffff16611ae884610b6d565b73ffffffffffffffffffffffffffffffffffffffff16145b80611b115750611b10818561185f565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611b3a8261141c565b73ffffffffffffffffffffffffffffffffffffffff1614611ba6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806126fc6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806125f56024913960400191505060405180910390fd5b611c37838383612026565b611c4260008261196d565b611c89600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061202b565b611cd0600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061204e565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b611e2e816118f3565b15611ea1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b611ead60008383612026565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611f46600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061204e565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600081600001549050919050565b611fbf848484611b1a565b611fcb84848484612064565b612020576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806125c36032913960400191505060405180910390fd5b50505050565b505050565b612043600182600001546123a090919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b60006120858473ffffffffffffffffffffffffffffffffffffffff166123ea565b6120925760019050612398565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b6120d6611965565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561218657808201518184015260208101905061216b565b50505050905090810190601f1680156121b35780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061224b5780518252602082019150602081019050602083039250612228565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146122ad576040519150601f19603f3d011682016040523d82523d6000602084013e6122b2565b606091505b509150915081612320576000815111156122cf5780518082602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806125c36032913960400191505060405180910390fd5b600081806020019051602081101561233757600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b60006123e283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612435565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561242c57506000801b8214155b92505050919050565b60008383111582906124e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156124a757808201518184015260208101905061248c565b50505050905090810190601f1680156124d45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061253657805160ff1916838001178555612564565b82800160010185558215612564579182015b82811115612563578251825591602001919060010190612548565b5b5090506125719190612575565b5090565b61259791905b8082111561259357600081600090555060010161257b565b5090565b9056fe596f752772206e6f7420616c6c6f77656420746f206465636c61726520796f757220616e696d616c4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644d75737420626520746865206f776e6572206f662074686520636f6e7472616374a26469706673582212207bee574e18a20e318327611aeef54e7759015db2fee1e7c7b809b64c67591a7a64736f6c63430006000033",
  "sourceMap": "53:1648:9:-:0;;;443:64;8:9:-1;5:2;;;30:1;27;20:12;5:2;443:64:9;742:40:3;399:10;761:20;;742:18;;;:40;;:::i;:::-;2259::4;2129:10;2278:20;;2259:18;;;:40;;:::i;:::-;489:10:9;473:13;;:26;;;;;;;;;;;;;;;;;;53:1648;;1498:201:3;1597:10;1582:25;;:11;:25;;;;;1574:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1687:4;1651:20;:33;1672:11;1651:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1498:201;:::o;53:1648:9:-;;;;;;;",
  "deployedSourceMap": "53:1648:9:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;53:1648:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:144:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;947:144:3;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4315:213:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4315:213:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3632:390;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3632:390:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;965:377:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;965:377:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;965:377:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;965:377:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;965:377:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;965:377:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6063:309:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6063:309:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1350:346:9;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1350:346:9;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1350:346:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1350:346:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1350:346:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1350:346:9;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1350:346:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1350:346:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1350:346:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1350:346:9;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1350:346:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1350:346:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1350:346:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1350:346:9;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1350:346:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1350:346:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1350:346:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1350:346:9;;;;;;;;;;;;;;;:::i;:::-;;7034:151:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7034:151:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;650:186:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;650:186:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;2964:237:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2964:237:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2518:220;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2518:220:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4835:295;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4835:295:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;317:43:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;317:43:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7922:289:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7922:289:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7922:289:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7922:289:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7922:289:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7922:289:4;;;;;;;;;;;;;;;:::i;:::-;;844:113:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;844:113:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5460:156:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5460:156:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;947:144:3;1026:4;1050:20;:33;1071:11;1050:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1043:40;;947:144;;;:::o;4315:213:4:-;4383:7;4411:16;4419:7;4411;:16::i;:::-;4403:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4496:15;:24;4512:7;4496:24;;;;;;;;;;;;;;;;;;;;;4489:31;;4315:213;;;:::o;3632:390::-;3713:13;3729:16;3737:7;3729;:16::i;:::-;3713:32;;3770:5;3764:11;;:2;:11;;;;3756:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3850:5;3834:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3859:37;3876:5;3883:12;:10;:12::i;:::-;3859:16;:37::i;:::-;3834:62;3826:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3993:21;4002:2;4006:7;3993:8;:21::i;:::-;3632:390;;;:::o;965:377:9:-;1030:18;1059:11;1081:19;1111;1141:18;1188:11;1200:8;1188:21;;;;;;;;;;;;;;;;;;:26;;1215:11;1227:8;1215:21;;;;;;;;;;;;;;;;;;:25;;;1241:11;1253:8;1241:21;;;;;;;;;;;;;;;;;;:27;;1279:11;1291:8;1279:21;;;;;;;;;;;;;;;;;;:27;;1307:11;1319:8;1307:21;;;;;;;;;;;;;;;;;;:26;;1181:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:377;;;;;;;:::o;6063:309:4:-;6224:41;6243:12;:10;:12::i;:::-;6257:7;6224:18;:41::i;:::-;6216:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6332:32;6346:4;6352:2;6356:7;6332:13;:32::i;:::-;6063:309;;;:::o;1350:346:9:-;1521:4;1493:32;;:24;1506:10;1493:12;:24::i;:::-;:32;;;1485:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1581:11;1598:37;;;;;;;;1605:4;1598:37;;;;1611:3;1598:37;;;;1616:5;1598:37;;;;1623:5;1598:37;;;;1630:4;1598:37;;;1581:55;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1581:55:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1647:41;1653:10;1685:1;1666:11;:18;;;;:20;1647:5;:41::i;:::-;1350:346;;;;;:::o;7034:151:4:-;7138:39;7155:4;7161:2;7165:7;7138:39;;;;;;;;;;;;:16;:39::i;:::-;7034:151;;;:::o;650:186:9:-;572:13;;;;;;;;;;;558:27;;:10;:27;;;550:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;726:12:::1;744:7;726:26;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;726:26:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;789:4;763:14;:23;778:7;763:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;809:19;820:7;809:19;;;;;;;;;;;;;;;;;;;;;;650:186:::0;:::o;2964:237:4:-;3028:7;3048:13;3064:11;:20;3076:7;3064:20;;;;;;;;;;;;;;;;;;;;;3048:36;;3120:1;3103:19;;:5;:19;;;;3095:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3188:5;3181:12;;;2964:237;;;:::o;2518:220::-;2582:7;2627:1;2610:19;;:5;:19;;;;2602:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2696:34;:17;:24;2714:5;2696:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2689:41;;2518:220;;;:::o;4835:295::-;4950:12;:10;:12::i;:::-;4938:24;;:8;:24;;;;4930:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5050:8;5005:18;:32;5024:12;:10;:12::i;:::-;5005:32;;;;;;;;;;;;;;;:42;5038:8;5005:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;5103:8;5074:48;;5089:12;:10;:12::i;:::-;5074:48;;;5113:8;5074:48;;;;;;;;;;;;;;;;;;;;;;4835:295;;:::o;317:43:9:-;;;;;;;;;;;;;;;;;;;;;;:::o;7922:289:4:-;8054:41;8073:12;:10;:12::i;:::-;8087:7;8054:18;:41::i;:::-;8046:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8160:43;8178:4;8184:2;8188:7;8197:5;8160:17;:43::i;:::-;7922:289;;;;:::o;844:113:9:-;903:4;926:14;:23;941:7;926:23;;;;;;;;;;;;;;;;;;;;;;;;;919:30;;844:113;;;:::o;5460:156:4:-;5549:4;5573:18;:25;5592:5;5573:25;;;;;;;;;;;;;;;:35;5599:8;5573:35;;;;;;;;;;;;;;;;;;;;;;;;;5566:42;;5460:156;;;;:::o;9412:155::-;9469:4;9486:13;9502:11;:20;9514:7;9502:20;;;;;;;;;;;;;;;;;;;;;9486:36;;9557:1;9540:19;;:5;:19;;;;9533:26;;;9412:155;;;:::o;751:106:1:-;804:15;839:10;832:17;;751:106;:::o;16126:158:4:-;16219:2;16192:15;:24;16208:7;16192:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16268:7;16264:2;16237:39;;16246:16;16254:7;16246;:16::i;:::-;16237:39;;;;;;;;;;;;16126:158;;:::o;9937:333::-;10022:4;10047:16;10055:7;10047;:16::i;:::-;10039:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10123:13;10139:16;10147:7;10139;:16::i;:::-;10123:32;;10185:5;10174:16;;:7;:16;;;:51;;;;10218:7;10194:31;;:20;10206:7;10194:11;:20::i;:::-;:31;;;10174:51;:87;;;;10229:32;10246:5;10253:7;10229:16;:32::i;:::-;10174:87;10166:96;;;9937:333;;;;:::o;13826:553::-;13948:4;13928:24;;:16;13936:7;13928;:16::i;:::-;:24;;;13920:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14031:1;14017:16;;:2;:16;;;;14009:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14087:39;14108:4;14114:2;14118:7;14087:20;:39::i;:::-;14167:29;14184:1;14188:7;14167:8;:29::i;:::-;14209:35;:17;:23;14227:4;14209:23;;;;;;;;;;;;;;;:33;:35::i;:::-;14255:33;:17;:21;14273:2;14255:21;;;;;;;;;;;;;;;:31;:33::i;:::-;14324:2;14301:11;:20;14313:7;14301:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;14363:7;14359:2;14344:27;;14353:4;14344:27;;;;;;;;;;;;13826:553;;;:::o;12038:401::-;12132:1;12118:16;;:2;:16;;;;12110:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12191:16;12199:7;12191;:16::i;:::-;12190:17;12182:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12253:45;12282:1;12286:2;12290:7;12253:20;:45::i;:::-;12334:2;12311:11;:20;12323:7;12311:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12347:33;:17;:21;12365:2;12347:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12423:7;12419:2;12398:33;;12415:1;12398:33;;;;;;;;;;;;12038:401;;:::o;1084:114:2:-;1149:7;1176;:14;;;1169:21;;1084:114;;;:::o;8930:280:4:-;9048:32;9062:4;9068:2;9072:7;9048:13;:32::i;:::-;9099:48;9122:4;9128:2;9132:7;9141:5;9099:22;:48::i;:::-;9091:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8930:280;;;;:::o;16832:93::-;;;;:::o;1395:110:2:-;1476:21;1495:1;1476:7;:14;;;:18;;:21;;;;:::i;:::-;1459:7;:14;;:38;;;;1395:110;:::o;1206:181::-;1378:1;1360:7;:14;;;:19;;;;;;;;;;;1206:181;:::o;15031:1087:4:-;15161:4;15188:15;:2;:13;;;:15::i;:::-;15183:60;;15227:4;15220:11;;;;15183:60;15314:12;15328:23;15355:2;:7;;15416:2;15400:36;;;:45;;;;15460:12;:10;:12::i;:::-;15487:4;15506:7;15528:5;15363:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15363:181:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15363:181:4;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;15363:181:4;15355:190;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;15355:190:4;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;15313:232:4;;;;15561:7;15556:555;;15609:1;15589:10;:17;:21;15585:384;;;15757:10;15751:17;15818:15;15805:10;15801:2;15797:19;15790:44;15705:148;15893:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15556:555;16001:13;16028:10;16017:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16017:32:4;;;;;;;;;;;;;;;;16001:48;;719:10;16082:16;;16072:26;;;:6;:26;;;;16064:35;;;;;15031:1087;;;;;;;:::o;1315:136:10:-;1373:7;1400:43;1404:1;1407;1400:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1393:50;;1315:136;;;;:::o;708:619:0:-;768:4;1030:16;1057:19;1079:66;1057:88;;;;1248:7;1236:20;1224:32;;1288:11;1276:8;:23;;:42;;;;;1315:3;1303:15;;:8;:15;;1276:42;1268:51;;;;708:619;;;:::o;1788:192:10:-;1874:7;1907:1;1902;:6;;1910:12;1894:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1894:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:9;1950:1;1946;:5;1934:17;;1971:1;1964:8;;;1788:192;;;;;:::o;53:1648:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.6.0;\r\n\r\nimport \"./ERC721.sol\";\r\n\r\ncontract MyContract is ERC721{\r\n    address payable private contractOwner;\r\n\r\n    struct animal{\r\n        string race;\r\n        uint256 age;\r\n        string ville;\r\n        string color;\r\n        string name;\r\n    }\r\n\r\n    event addBreeder (address breeder);\r\n    mapping(address=>bool)public allowedBreeder;\r\n\r\n    animal[] private animalArray;\r\n    address[] private breederArray;\r\n\r\n    constructor()public{\r\n        contractOwner = msg.sender;\r\n    }\r\n    modifier ownerOfContract(){\r\n        require(msg.sender == contractOwner,\"Must be the owner of the contract\");\r\n        _;\r\n    }\r\n\r\n    function registerBreeder(address breeder) public ownerOfContract {\r\n        breederArray.push(breeder);\r\n        allowedBreeder[breeder] = true;\r\n        emit addBreeder(breeder);\r\n    }\r\n\r\n    function isRegistered(address breeder) public view returns(bool){\r\n        return allowedBreeder[breeder];\r\n    }\r\n\r\n    function AnimalInformation(uint256 animalID) public view returns(string memory race,\r\n        uint256 age,\r\n        string memory ville,\r\n        string memory color,\r\n        string memory name)\r\n        {\r\n        return(animalArray[animalID].race,animalArray[animalID].age,animalArray[animalID].ville,\r\n        animalArray[animalID].color,animalArray[animalID].name);\r\n    }\r\n\r\n    function declareAnimal(string memory race, uint256 age, string memory ville,string memory color, string memory name) public {\r\n        require(isRegistered(msg.sender) == true, \"You'r not allowed to declare your animal\");\r\n        animalArray.push(animal(race, age, ville, color, name));\r\n        _mint(msg.sender, (animalArray.length-1));\r\n    }\r\n\r\n}",
  "sourcePath": "D:\\ESILV S08\\Blockchain programming\\TD07\\contracts\\MyContract.sol",
  "ast": {
    "absolutePath": "/D/ESILV S08/Blockchain programming/TD07/contracts/MyContract.sol",
    "exportedSymbols": {
      "MyContract": [
        1270
      ]
    },
    "id": 1271,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1098,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/D/ESILV S08/Blockchain programming/TD07/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1099,
        "nodeType": "ImportDirective",
        "scope": 1271,
        "sourceUnit": 931,
        "src": "27:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1100,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 930,
              "src": "76:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$930",
                "typeString": "contract ERC721"
              }
            },
            "id": 1101,
            "nodeType": "InheritanceSpecifier",
            "src": "76:6:9"
          }
        ],
        "contractDependencies": [
          104,
          206,
          930,
          940,
          1043
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1270,
        "linearizedBaseContracts": [
          1270,
          930,
          1043,
          206,
          940,
          104
        ],
        "name": "MyContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1103,
            "name": "contractOwner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1270,
            "src": "89:37:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1102,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "89:15:9",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "MyContract.animal",
            "id": 1114,
            "members": [
              {
                "constant": false,
                "id": 1105,
                "name": "race",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1114,
                "src": "159:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1104,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "159:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1107,
                "name": "age",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1114,
                "src": "181:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1106,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "181:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1109,
                "name": "ville",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1114,
                "src": "203:12:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1108,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "203:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1111,
                "name": "color",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1114,
                "src": "226:12:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1110,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "226:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1113,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1114,
                "src": "249:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1112,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "249:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "animal",
            "nodeType": "StructDefinition",
            "scope": 1270,
            "src": "135:133:9",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1118,
            "name": "addBreeder",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1116,
                  "indexed": false,
                  "name": "breeder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1118,
                  "src": "294:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "293:17:9"
            },
            "src": "276:35:9"
          },
          {
            "constant": false,
            "functionSelector": "a63b6d3a",
            "id": 1122,
            "name": "allowedBreeder",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1270,
            "src": "317:43:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1121,
              "keyType": {
                "id": 1119,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "325:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "317:22:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1120,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "334:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1125,
            "name": "animalArray",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1270,
            "src": "369:28:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
              "typeString": "struct MyContract.animal[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 1123,
                "name": "animal",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1114,
                "src": "369:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_animal_$1114_storage_ptr",
                  "typeString": "struct MyContract.animal"
                }
              },
              "id": 1124,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "369:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage_ptr",
                "typeString": "struct MyContract.animal[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1128,
            "name": "breederArray",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1270,
            "src": "404:30:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1126,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "404:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1127,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "404:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1136,
              "nodeType": "Block",
              "src": "462:45:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1131,
                      "name": "contractOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1103,
                      "src": "473:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1132,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1472,
                        "src": "489:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "489:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "473:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1135,
                  "nodeType": "ExpressionStatement",
                  "src": "473:26:9"
                }
              ]
            },
            "documentation": null,
            "id": 1137,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "454:2:9"
            },
            "returnParameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:0:9"
            },
            "scope": 1270,
            "src": "443:64:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1148,
              "nodeType": "Block",
              "src": "539:103:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1140,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1472,
                            "src": "558:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "558:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1142,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1103,
                          "src": "572:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "558:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d75737420626520746865206f776e6572206f662074686520636f6e7472616374",
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "586:35:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d329a33e962fb2142be10f8886f28355420fdd49eb0f74992543c8c32631e775",
                          "typeString": "literal_string \"Must be the owner of the contract\""
                        },
                        "value": "Must be the owner of the contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d329a33e962fb2142be10f8886f28355420fdd49eb0f74992543c8c32631e775",
                          "typeString": "literal_string \"Must be the owner of the contract\""
                        }
                      ],
                      "id": 1139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1475,
                        1476
                      ],
                      "referencedDeclaration": 1476,
                      "src": "550:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "550:72:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1146,
                  "nodeType": "ExpressionStatement",
                  "src": "550:72:9"
                },
                {
                  "id": 1147,
                  "nodeType": "PlaceholderStatement",
                  "src": "633:1:9"
                }
              ]
            },
            "documentation": null,
            "id": 1149,
            "name": "ownerOfContract",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:2:9"
            },
            "src": "513:129:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1172,
              "nodeType": "Block",
              "src": "715:121:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1159,
                        "name": "breeder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1151,
                        "src": "744:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1156,
                        "name": "breederArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "726:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "726:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:26:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1161,
                  "nodeType": "ExpressionStatement",
                  "src": "726:26:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1162,
                        "name": "allowedBreeder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1122,
                        "src": "763:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1164,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1163,
                        "name": "breeder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1151,
                        "src": "778:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "763:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "789:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "763:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1167,
                  "nodeType": "ExpressionStatement",
                  "src": "763:30:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1169,
                        "name": "breeder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1151,
                        "src": "820:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1168,
                      "name": "addBreeder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "809:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "809:19:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1171,
                  "nodeType": "EmitStatement",
                  "src": "804:24:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "476fd474",
            "id": 1173,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1154,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1153,
                  "name": "ownerOfContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1149,
                  "src": "699:15:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "699:15:9"
              }
            ],
            "name": "registerBreeder",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "name": "breeder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1173,
                  "src": "675:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "674:17:9"
            },
            "returnParameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "715:0:9"
            },
            "scope": 1270,
            "src": "650:186:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1184,
              "nodeType": "Block",
              "src": "908:49:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1180,
                      "name": "allowedBreeder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1122,
                      "src": "926:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1182,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1181,
                      "name": "breeder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1175,
                      "src": "941:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "926:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1179,
                  "id": 1183,
                  "nodeType": "Return",
                  "src": "919:30:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c3c5a547",
            "id": 1185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1175,
                  "name": "breeder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1185,
                  "src": "866:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "865:17:9"
            },
            "returnParameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1178,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1185,
                  "src": "903:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1177,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "902:6:9"
            },
            "scope": 1270,
            "src": "844:113:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1222,
              "nodeType": "Block",
              "src": "1170:172:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1200,
                            "name": "animalArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "1188:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
                              "typeString": "struct MyContract.animal storage ref[] storage ref"
                            }
                          },
                          "id": 1202,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1201,
                            "name": "animalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "1200:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1188:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_animal_$1114_storage",
                            "typeString": "struct MyContract.animal storage ref"
                          }
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "race",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1105,
                        "src": "1188:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1204,
                            "name": "animalArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "1215:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
                              "typeString": "struct MyContract.animal storage ref[] storage ref"
                            }
                          },
                          "id": 1206,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1205,
                            "name": "animalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "1227:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1215:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_animal_$1114_storage",
                            "typeString": "struct MyContract.animal storage ref"
                          }
                        },
                        "id": 1207,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "age",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1107,
                        "src": "1215:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1208,
                            "name": "animalArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "1241:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
                              "typeString": "struct MyContract.animal storage ref[] storage ref"
                            }
                          },
                          "id": 1210,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1209,
                            "name": "animalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "1253:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1241:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_animal_$1114_storage",
                            "typeString": "struct MyContract.animal storage ref"
                          }
                        },
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ville",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1109,
                        "src": "1241:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1212,
                            "name": "animalArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "1279:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
                              "typeString": "struct MyContract.animal storage ref[] storage ref"
                            }
                          },
                          "id": 1214,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1213,
                            "name": "animalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "1291:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1279:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_animal_$1114_storage",
                            "typeString": "struct MyContract.animal storage ref"
                          }
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "color",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1111,
                        "src": "1279:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1216,
                            "name": "animalArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "1307:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
                              "typeString": "struct MyContract.animal storage ref[] storage ref"
                            }
                          },
                          "id": 1218,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1217,
                            "name": "animalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "1319:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1307:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_animal_$1114_storage",
                            "typeString": "struct MyContract.animal storage ref"
                          }
                        },
                        "id": 1219,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1113,
                        "src": "1307:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "id": 1220,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1187:147:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_string_storage_$_t_string_storage_$_t_string_storage_$",
                      "typeString": "tuple(string storage ref,uint256,string storage ref,string storage ref,string storage ref)"
                    }
                  },
                  "functionReturnParameters": 1199,
                  "id": 1221,
                  "nodeType": "Return",
                  "src": "1181:153:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0e72a687",
            "id": 1223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AnimalInformation",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1187,
                  "name": "animalID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1223,
                  "src": "992:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "991:18:9"
            },
            "returnParameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1190,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1223,
                  "src": "1030:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1189,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1192,
                  "name": "age",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1223,
                  "src": "1059:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1194,
                  "name": "ville",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1223,
                  "src": "1081:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1193,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1196,
                  "name": "color",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1223,
                  "src": "1111:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1198,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1223,
                  "src": "1141:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1197,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1029:131:9"
            },
            "scope": 1270,
            "src": "965:377:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1268,
              "nodeType": "Block",
              "src": "1474:222:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1238,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1472,
                                "src": "1506:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1506:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1237,
                            "name": "isRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1185,
                            "src": "1493:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1493:24:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1521:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1493:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f752772206e6f7420616c6c6f77656420746f206465636c61726520796f757220616e696d616c",
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1527:42:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a7f9801644f3790ae0fa49ab66034f08404a00898496a9519f18b5e52388f90",
                          "typeString": "literal_string \"You'r not allowed to declare your animal\""
                        },
                        "value": "You'r not allowed to declare your animal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a7f9801644f3790ae0fa49ab66034f08404a00898496a9519f18b5e52388f90",
                          "typeString": "literal_string \"You'r not allowed to declare your animal\""
                        }
                      ],
                      "id": 1236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1475,
                        1476
                      ],
                      "referencedDeclaration": 1476,
                      "src": "1485:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1485:85:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1245,
                  "nodeType": "ExpressionStatement",
                  "src": "1485:85:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1250,
                            "name": "race",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1225,
                            "src": "1605:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1251,
                            "name": "age",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1227,
                            "src": "1611:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1252,
                            "name": "ville",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1229,
                            "src": "1616:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1253,
                            "name": "color",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1231,
                            "src": "1623:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1254,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1233,
                            "src": "1630:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1249,
                          "name": "animal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "1598:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_animal_$1114_storage_ptr_$",
                            "typeString": "type(struct MyContract.animal storage pointer)"
                          }
                        },
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1598:37:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_animal_$1114_memory",
                          "typeString": "struct MyContract.animal memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_animal_$1114_memory",
                          "typeString": "struct MyContract.animal memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1246,
                        "name": "animalArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "1581:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
                          "typeString": "struct MyContract.animal storage ref[] storage ref"
                        }
                      },
                      "id": 1248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1581:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_animal_$1114_storage_$returns$__$",
                        "typeString": "function (struct MyContract.animal storage ref)"
                      }
                    },
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1581:55:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "1581:55:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1259,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1472,
                          "src": "1653:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1653:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1261,
                                "name": "animalArray",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "1666:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
                                  "typeString": "struct MyContract.animal storage ref[] storage ref"
                                }
                              },
                              "id": 1262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1666:18:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1685:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1666:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1265,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1665:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1258,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 684,
                      "src": "1647:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1647:41:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1267,
                  "nodeType": "ExpressionStatement",
                  "src": "1647:41:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2e2e686d",
            "id": 1269,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "declareAnimal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1225,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1269,
                  "src": "1373:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1224,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1227,
                  "name": "age",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1269,
                  "src": "1393:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1229,
                  "name": "ville",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1269,
                  "src": "1406:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1228,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1231,
                  "name": "color",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1269,
                  "src": "1426:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1230,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1426:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1233,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1269,
                  "src": "1447:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1232,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1372:94:9"
            },
            "returnParameters": {
              "id": 1235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1474:0:9"
            },
            "scope": 1270,
            "src": "1350:346:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1271,
        "src": "53:1648:9"
      }
    ],
    "src": "0:1701:9"
  },
  "legacyAST": {
    "absolutePath": "/D/ESILV S08/Blockchain programming/TD07/contracts/MyContract.sol",
    "exportedSymbols": {
      "MyContract": [
        1270
      ]
    },
    "id": 1271,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1098,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/D/ESILV S08/Blockchain programming/TD07/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1099,
        "nodeType": "ImportDirective",
        "scope": 1271,
        "sourceUnit": 931,
        "src": "27:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1100,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 930,
              "src": "76:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$930",
                "typeString": "contract ERC721"
              }
            },
            "id": 1101,
            "nodeType": "InheritanceSpecifier",
            "src": "76:6:9"
          }
        ],
        "contractDependencies": [
          104,
          206,
          930,
          940,
          1043
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1270,
        "linearizedBaseContracts": [
          1270,
          930,
          1043,
          206,
          940,
          104
        ],
        "name": "MyContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1103,
            "name": "contractOwner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1270,
            "src": "89:37:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1102,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "89:15:9",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "MyContract.animal",
            "id": 1114,
            "members": [
              {
                "constant": false,
                "id": 1105,
                "name": "race",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1114,
                "src": "159:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1104,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "159:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1107,
                "name": "age",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1114,
                "src": "181:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1106,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "181:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1109,
                "name": "ville",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1114,
                "src": "203:12:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1108,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "203:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1111,
                "name": "color",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1114,
                "src": "226:12:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1110,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "226:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1113,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1114,
                "src": "249:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1112,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "249:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "animal",
            "nodeType": "StructDefinition",
            "scope": 1270,
            "src": "135:133:9",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1118,
            "name": "addBreeder",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1116,
                  "indexed": false,
                  "name": "breeder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1118,
                  "src": "294:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "293:17:9"
            },
            "src": "276:35:9"
          },
          {
            "constant": false,
            "functionSelector": "a63b6d3a",
            "id": 1122,
            "name": "allowedBreeder",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1270,
            "src": "317:43:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1121,
              "keyType": {
                "id": 1119,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "325:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "317:22:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1120,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "334:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1125,
            "name": "animalArray",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1270,
            "src": "369:28:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
              "typeString": "struct MyContract.animal[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 1123,
                "name": "animal",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1114,
                "src": "369:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_animal_$1114_storage_ptr",
                  "typeString": "struct MyContract.animal"
                }
              },
              "id": 1124,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "369:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage_ptr",
                "typeString": "struct MyContract.animal[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1128,
            "name": "breederArray",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1270,
            "src": "404:30:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1126,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "404:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1127,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "404:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1136,
              "nodeType": "Block",
              "src": "462:45:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1131,
                      "name": "contractOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1103,
                      "src": "473:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1132,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1472,
                        "src": "489:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "489:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "473:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1135,
                  "nodeType": "ExpressionStatement",
                  "src": "473:26:9"
                }
              ]
            },
            "documentation": null,
            "id": 1137,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "454:2:9"
            },
            "returnParameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:0:9"
            },
            "scope": 1270,
            "src": "443:64:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1148,
              "nodeType": "Block",
              "src": "539:103:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1140,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1472,
                            "src": "558:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "558:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1142,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1103,
                          "src": "572:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "558:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d75737420626520746865206f776e6572206f662074686520636f6e7472616374",
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "586:35:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d329a33e962fb2142be10f8886f28355420fdd49eb0f74992543c8c32631e775",
                          "typeString": "literal_string \"Must be the owner of the contract\""
                        },
                        "value": "Must be the owner of the contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d329a33e962fb2142be10f8886f28355420fdd49eb0f74992543c8c32631e775",
                          "typeString": "literal_string \"Must be the owner of the contract\""
                        }
                      ],
                      "id": 1139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1475,
                        1476
                      ],
                      "referencedDeclaration": 1476,
                      "src": "550:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "550:72:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1146,
                  "nodeType": "ExpressionStatement",
                  "src": "550:72:9"
                },
                {
                  "id": 1147,
                  "nodeType": "PlaceholderStatement",
                  "src": "633:1:9"
                }
              ]
            },
            "documentation": null,
            "id": 1149,
            "name": "ownerOfContract",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:2:9"
            },
            "src": "513:129:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1172,
              "nodeType": "Block",
              "src": "715:121:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1159,
                        "name": "breeder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1151,
                        "src": "744:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1156,
                        "name": "breederArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "726:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "726:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:26:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1161,
                  "nodeType": "ExpressionStatement",
                  "src": "726:26:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1162,
                        "name": "allowedBreeder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1122,
                        "src": "763:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1164,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1163,
                        "name": "breeder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1151,
                        "src": "778:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "763:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "789:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "763:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1167,
                  "nodeType": "ExpressionStatement",
                  "src": "763:30:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1169,
                        "name": "breeder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1151,
                        "src": "820:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1168,
                      "name": "addBreeder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "809:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "809:19:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1171,
                  "nodeType": "EmitStatement",
                  "src": "804:24:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "476fd474",
            "id": 1173,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1154,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1153,
                  "name": "ownerOfContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1149,
                  "src": "699:15:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "699:15:9"
              }
            ],
            "name": "registerBreeder",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "name": "breeder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1173,
                  "src": "675:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "674:17:9"
            },
            "returnParameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "715:0:9"
            },
            "scope": 1270,
            "src": "650:186:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1184,
              "nodeType": "Block",
              "src": "908:49:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1180,
                      "name": "allowedBreeder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1122,
                      "src": "926:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1182,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1181,
                      "name": "breeder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1175,
                      "src": "941:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "926:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1179,
                  "id": 1183,
                  "nodeType": "Return",
                  "src": "919:30:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c3c5a547",
            "id": 1185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1175,
                  "name": "breeder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1185,
                  "src": "866:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "865:17:9"
            },
            "returnParameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1178,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1185,
                  "src": "903:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1177,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "902:6:9"
            },
            "scope": 1270,
            "src": "844:113:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1222,
              "nodeType": "Block",
              "src": "1170:172:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1200,
                            "name": "animalArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "1188:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
                              "typeString": "struct MyContract.animal storage ref[] storage ref"
                            }
                          },
                          "id": 1202,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1201,
                            "name": "animalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "1200:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1188:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_animal_$1114_storage",
                            "typeString": "struct MyContract.animal storage ref"
                          }
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "race",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1105,
                        "src": "1188:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1204,
                            "name": "animalArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "1215:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
                              "typeString": "struct MyContract.animal storage ref[] storage ref"
                            }
                          },
                          "id": 1206,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1205,
                            "name": "animalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "1227:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1215:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_animal_$1114_storage",
                            "typeString": "struct MyContract.animal storage ref"
                          }
                        },
                        "id": 1207,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "age",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1107,
                        "src": "1215:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1208,
                            "name": "animalArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "1241:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
                              "typeString": "struct MyContract.animal storage ref[] storage ref"
                            }
                          },
                          "id": 1210,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1209,
                            "name": "animalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "1253:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1241:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_animal_$1114_storage",
                            "typeString": "struct MyContract.animal storage ref"
                          }
                        },
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ville",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1109,
                        "src": "1241:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1212,
                            "name": "animalArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "1279:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
                              "typeString": "struct MyContract.animal storage ref[] storage ref"
                            }
                          },
                          "id": 1214,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1213,
                            "name": "animalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "1291:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1279:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_animal_$1114_storage",
                            "typeString": "struct MyContract.animal storage ref"
                          }
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "color",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1111,
                        "src": "1279:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1216,
                            "name": "animalArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "1307:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
                              "typeString": "struct MyContract.animal storage ref[] storage ref"
                            }
                          },
                          "id": 1218,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1217,
                            "name": "animalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "1319:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1307:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_animal_$1114_storage",
                            "typeString": "struct MyContract.animal storage ref"
                          }
                        },
                        "id": 1219,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1113,
                        "src": "1307:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "id": 1220,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1187:147:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_string_storage_$_t_string_storage_$_t_string_storage_$",
                      "typeString": "tuple(string storage ref,uint256,string storage ref,string storage ref,string storage ref)"
                    }
                  },
                  "functionReturnParameters": 1199,
                  "id": 1221,
                  "nodeType": "Return",
                  "src": "1181:153:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0e72a687",
            "id": 1223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AnimalInformation",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1187,
                  "name": "animalID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1223,
                  "src": "992:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "991:18:9"
            },
            "returnParameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1190,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1223,
                  "src": "1030:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1189,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1192,
                  "name": "age",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1223,
                  "src": "1059:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1194,
                  "name": "ville",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1223,
                  "src": "1081:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1193,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1196,
                  "name": "color",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1223,
                  "src": "1111:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1198,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1223,
                  "src": "1141:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1197,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1029:131:9"
            },
            "scope": 1270,
            "src": "965:377:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1268,
              "nodeType": "Block",
              "src": "1474:222:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1238,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1472,
                                "src": "1506:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1506:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1237,
                            "name": "isRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1185,
                            "src": "1493:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1493:24:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1521:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1493:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f752772206e6f7420616c6c6f77656420746f206465636c61726520796f757220616e696d616c",
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1527:42:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a7f9801644f3790ae0fa49ab66034f08404a00898496a9519f18b5e52388f90",
                          "typeString": "literal_string \"You'r not allowed to declare your animal\""
                        },
                        "value": "You'r not allowed to declare your animal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a7f9801644f3790ae0fa49ab66034f08404a00898496a9519f18b5e52388f90",
                          "typeString": "literal_string \"You'r not allowed to declare your animal\""
                        }
                      ],
                      "id": 1236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1475,
                        1476
                      ],
                      "referencedDeclaration": 1476,
                      "src": "1485:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1485:85:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1245,
                  "nodeType": "ExpressionStatement",
                  "src": "1485:85:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1250,
                            "name": "race",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1225,
                            "src": "1605:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1251,
                            "name": "age",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1227,
                            "src": "1611:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1252,
                            "name": "ville",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1229,
                            "src": "1616:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1253,
                            "name": "color",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1231,
                            "src": "1623:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1254,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1233,
                            "src": "1630:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1249,
                          "name": "animal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "1598:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_animal_$1114_storage_ptr_$",
                            "typeString": "type(struct MyContract.animal storage pointer)"
                          }
                        },
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1598:37:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_animal_$1114_memory",
                          "typeString": "struct MyContract.animal memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_animal_$1114_memory",
                          "typeString": "struct MyContract.animal memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1246,
                        "name": "animalArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "1581:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
                          "typeString": "struct MyContract.animal storage ref[] storage ref"
                        }
                      },
                      "id": 1248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1581:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_animal_$1114_storage_$returns$__$",
                        "typeString": "function (struct MyContract.animal storage ref)"
                      }
                    },
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1581:55:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "1581:55:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1259,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1472,
                          "src": "1653:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1653:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1261,
                                "name": "animalArray",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "1666:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_animal_$1114_storage_$dyn_storage",
                                  "typeString": "struct MyContract.animal storage ref[] storage ref"
                                }
                              },
                              "id": 1262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1666:18:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1685:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1666:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1265,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1665:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1258,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 684,
                      "src": "1647:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1647:41:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1267,
                  "nodeType": "ExpressionStatement",
                  "src": "1647:41:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2e2e686d",
            "id": 1269,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "declareAnimal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1225,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1269,
                  "src": "1373:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1224,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1227,
                  "name": "age",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1269,
                  "src": "1393:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1229,
                  "name": "ville",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1269,
                  "src": "1406:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1228,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1231,
                  "name": "color",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1269,
                  "src": "1426:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1230,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1426:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1233,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1269,
                  "src": "1447:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1232,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1372:94:9"
            },
            "returnParameters": {
              "id": 1235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1474:0:9"
            },
            "scope": 1270,
            "src": "1350:346:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1271,
        "src": "53:1648:9"
      }
    ],
    "src": "0:1701:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x07c4bdeb5db0bd14ff301a05f4d029a128399c773e8bd694ace128502b09db00": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "breeder",
              "type": "address"
            }
          ],
          "name": "addBreeder",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x52ad697CdbD5aeA0bA5B01d197a13724874FAC7D",
      "transactionHash": "0xaf8e6c92ecae38b167c9303edad0eff432d2a3466e91a4a92c5446fa1786dece"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-18T11:34:27.761Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.      * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}